AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  test-2

  Sample SAM Template for test-2

Parameters:
  UserPoolNameCompany:
    Type: String
    Default: "covcov-company"
  UserPoolArnCompany:
    Type: String
    Default: "arn:aws:cognito-idp:eu-west-3:835479088552:userpool/eu-west-3_05HzIk4Qk"

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.8
    CodeUri: src/   
    Timeout: 180
    Layers:
      - !Ref CovcovLibsLayer
  Api:
    EndpointConfiguration:
      Type: REGIONAL
    GatewayResponses:
      UNAUTHORIZED:
        StatusCode: 401
        ResponseParameters:
          Headers:
            Access-Control-Allow-Origin: "'*'"
    Cors:
      AllowMethods: "'POST, GET'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Resources:
  CovcovCompanyCognito:
    Type: AWS::Cognito::UserPool
    Properties:
      # UserPoolName: covcov-company-1
      UserPoolName: !Sub ${UserPoolNameCompany}

#      Policies:
#        PasswordPolicy:
#          MinimumLength: 8
#      AutoVerifiedAttributes:
#        - email
#      UsernameAttributes:
#        - email
#      Schema:
#        - AttributeDataType: String
#          Name: email
#          Required: false

  CovcovLibsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: Dependencies base layer for python apps
      ContentUri: src-libs/
#      ContentUri:
#        LayerContent:
#          Bucket:
      LayerName: covcov-libs
      RetentionPolicy: Delete # Retain
    Metadata:
      BuildMethod: python3.8


  CovcovApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      # StageName: v1
      # Cors: "'*'"
#      Cors:
#        AllowMethods: "'POST, GET'"
#        AllowHeaders: "'*'"
#        AllowOrigin: "'*'"
      Auth:
        # DefaultAuthorizer: MyCognitoAuth # OPTIONAL
        Authorizers:
          CovcovCompanyAuthorizer:
            # Can also accept an array
#            UserPoolArn: !GetAtt CovcovCompanyCognito.Arn
#            UserPoolArn: 'arn:aws:cognito-idp:eu-west-3:835479088552:userpool/eu-west-3_05HzIk4Qk'
            UserPoolArn: !Sub ${UserPoolArnCompany}
            Identity: # OPTIONAL
              # OPTIONAL; Default: 'Authorization'
              Header: auth-id-token 
              # OPTIONAL
              # ValidationExpression: myAuthValidationExp


#  ApiCognitoAuthorizer:          
#    Type: AWS::ApiGateway::Authorizer
#    Properties:
#      IdentitySource: 'method.request.header.auth-id-token'
#      Name: ApiCognitoAuthorizer
#      ProviderARNs:
#        - 'arn:aws:cognito-idp:{region}:{userpoolIdentifier}'
        # - 'arn:aws:cognito-idp:eu-west-3:835479088552:userpool/eu-west-3_05HzIk4Qk'
#      RestApiId: !Ref ServerlessRestApi
#      Type: COGNITO_USER_POOLS

  CompanyDomainFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: lambda_company_domain.handle
      Events:
        CovcovApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /company_domain
            Method: post
            RestApiId: !Ref CovcovApi  # <-- Implicit API: !Ref ServerlessRestApi
            Auth:
              Authorizer: CovcovCompanyAuthorizer
              
  CompanyCasContactFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_cas_contact.handle
      Events:
        CovcovApi:
          Type: Api
          Properties:
            Path: /c_ccontact
            Method: post
            RestApiId: !Ref CovcovApi
            Auth:
              Authorizer: CovcovCompanyAuthorizer

  VisitDomainFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_visit_domain.handle
      Events:
        CovcovApi:
          Type: Api
          Properties:
            Path: /visit_domain
            Method: get
            RestApiId: !Ref CovcovApi

  PreSignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_presignup.handle
      Events:
        CovcovCompanyCognitoEvt:
          # https://forum.serverless.com/t/linking-lambda-function-to-an-exiting-user-pool/4688/3
          Type:  Cognito
          Properties:
            UserPool: !Ref CovcovCompanyCognito
            Trigger: PreSignUp

  PostConfirmation:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_postsignup_confirmation.handle
      Events:
        CovcovCompanyCognitoEvt:
          Type:  Cognito
          Properties:
            UserPool: !Ref CovcovCompanyCognito
            Trigger: PostConfirmation



Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CovcovApi:
    Description: "API Gateway endpoint URL for Prod stage for CovcovApi functions"
    # Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
    Value: !Sub "https://${CovcovApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

  CompanyDomainFunction:
    Description: "Company Domain Lambda Function ARN"
    Value: !GetAtt CompanyDomainFunction.Arn
  CompanyCasContactFunction:
    Description: "Company CasContact Lambda Function ARN"
    Value: !GetAtt CompanyCasContactFunction.Arn
  VisitDomainFunction:
    Description: "Visit Domain Lambda Function ARN"
    Value: !GetAtt VisitDomainFunction.Arn

  CompanyDomainFunctionIamRole:
    Description: "Implicit IAM Role created for CompanyDomainFunction"
    Value: !GetAtt CompanyDomainFunctionRole.Arn
  VisitDomainFunctionIamRole:
    Description: "Implicit IAM Role created for CompanyDomainFunction"
    Value: !GetAtt VisitDomainFunctionRole.Arn
