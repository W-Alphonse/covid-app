AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >
  covcov-cognito-DEV: Covcov Cognito stack for DEV
Parameters:
  ResourceLogicalName:
    Type: String
    Default: "covcov-company"
  ResourceEnv:
    Type: String
    Default: "DEV"
  UserPoolNameCompany:
    Type: String
    Default: "covcov-company-DEV"

#    Default: !Sub ${ResourceLogicalName}
#    Default: !GetAtt "${AWS::StackName}"
#  STACK_NAME="covcov-cognito-DEV"


Resources:
  CovcovLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  CovcovCompanyCognito:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${UserPoolNameCompany}
      AliasAttributes :
        - email
      AutoVerifiedAttributes:
        - email
      # UsernameAttributes:
      # - email
      UsernameConfiguration:
        CaseSensitive : False
      MfaConfiguration : "OFF"
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: "verified_email"
            Priority: 1
      Schema:
        - Name: email
          Required: true
          Mutable: true
        - Name: etablissement
          AttributeDataType: String # https://stackoverflow.com/questions/46302488/how-to-set-required-attributes-in-aws-cognito-user-pool-using-aws-cloudformation
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MaxLength: 30
            MinLength: 1
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireNumbers : True
          RequireSymbols : True
          RequireUppercase : True
          RequireLowercase : True
          TemporaryPasswordValidityDays : 7
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: False
      VerificationMessageTemplate:
        DefaultEmailOption: "CONFIRM_WITH_LINK"
        EmailSubjectByLink: "Votre lien de validation Covcov"
        EmailMessageByLink: "Veuillez cliquer sur le lien ci-dessous pour vérifier votre adresse e-mail. {##Vérifier l'adresse e-mail##}"

  CovcovClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CovcovCompanyCognito
      # ClientName: !Sub ${AppName}-UserPoolClient
      ClientName: covcov-app
      GenerateSecret: false # set to false for web clients
      PreventUserExistenceErrors: "ENABLED"

      TokenValidityUnits:
        AccessToken: "minutes"
        IdToken: "minutes"
        RefreshToken: "days"
      RefreshTokenValidity: 1
      AccessTokenValidity: 60
      IdTokenValidity: 60

#      SupportedIdentityProviders:
#        - COGNITO
#      CallbackURLs: !Ref ClientDomains
#      LogoutURLs: !Ref ClientDomains
#      AllowedOAuthFlowsUserPoolClient: true
#      AllowedOAuthFlows:
#        - code
#        - implicit #for testing with postman
#      AllowedOAuthScopes:
#        - email
#        - openid
#        - profile

Outputs:
  UserPoolId:
    Value: !Ref CovcovCompanyCognito
    Export:
      Name: "UserPool::Id"
    Description : "CovcovCompanyCognito - Pool Id"
  AppClient:
    Value: !Ref CovcovClient
    Export:
      Name: "UserPoolClient::Id"
    Description : "CovcovClient - Client Id"
