AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >
  Fn::Sub "${AWS::StackName}"
Parameters:
  UserPoolNameCompany:
    Type: String
    Default: Fn::Sub "${AWS::StackName}"

Globals:
  Function:
    Runtime: python3.8
    CodeUri: ../src/
    Timeout: 180
    Layers:
      - !Ref CovcovLibsLayer

Resources:
  CovcovLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  CovcovLibsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: Dependencies base layer for python apps
      ContentUri: ../src-libs/
      LayerName: covcov-libs
      RetentionPolicy: Delete # Retain
    Metadata:
      BuildMethod: python3.8

  CovcovCompanyCognito:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${UserPoolNameCompany}
      AliasAttributes :
        - email
      AutoVerifiedAttributes:
        - email
      # UsernameAttributes:
      # - email
      UsernameConfiguration:
        CaseSensitive : False
      MfaConfiguration : "OFF"
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: "verified_email"
            Priority: 1
      Schema:
        - Name: email
          Required: true
          Mutable: true
        - Name: etablissement
          AttributeDataType: String # https://stackoverflow.com/questions/46302488/how-to-set-required-attributes-in-aws-cognito-user-pool-using-aws-cloudformation
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MaxLength: 30
            MinLength: 1
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireNumbers : True
          RequireSymbols : True
          RequireUppercase : True
          RequireLowercase : True
          TemporaryPasswordValidityDays : 7
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: False
      VerificationMessageTemplate:
        DefaultEmailOption: "CONFIRM_WITH_LINK"
        EmailSubjectByLink: "Votre lien de validation Covcov"
        EmailMessageByLink: "Veuillez cliquer sur le lien ci-dessous pour vérifier votre adresse e-mail. {##Vérifier l'adresse e-mail##}"
      LambdaConfig:
        PreSignUp: !GetAtt PreSignupFunction.Arn
        PostConfirmation: !GetAtt PostConfirmationFunction.Arn

  CovcovClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CovcovCompanyCognito
      ClientName: covcov-app
      GenerateSecret: false # set to false for web clients
      PreventUserExistenceErrors: "ENABLED"

      TokenValidityUnits:
        AccessToken: "minutes"
        IdToken: "minutes"
        RefreshToken: "days"
      RefreshTokenValidity: 1
      AccessTokenValidity: 50
      IdTokenValidity: 60

  PreSignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_presignup.handle
#      Events:
#        CovcovCompanyCognitoEvt:
#          # https://forum.serverless.com/t/linking-lambda-function-to-an-exiting-user-pool/4688/3
#          Type:  Cognito
#          Properties:
#            UserPool: !Ref CovcovCompanyCognito
#            Trigger: PreSignUp

  PostConfirmationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_postsignup_confirmation.handle

Outputs:
  UserPoolId:
    Description : "CovcovCompanyCognito - Pool Id"
    Value: !Ref CovcovCompanyCognito
    Export:
      Name: "UserPool::Id"
  UserPoolArn:                              # <-- Logical ID
    Description : "CovcovCompanyCognito - Pool Arn"
    Value: !GetAtt CovcovCompanyCognito.Arn # <-- Value to return
    Export:
      Name: !Sub "${AWS::StackName}-UserPoolArn"  # <-- Value to export
  AppClientId:
    Description : "CovcovClient - Client Id"
    Value: !Ref CovcovClient
    Export:
      Name: "UserPoolClient::Id"
