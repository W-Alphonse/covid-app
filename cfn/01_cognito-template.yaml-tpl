AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >
  Stack: ¤stack-name¤-¤env¤
Parameters:
  UserPoolNameCompany:
    Type: String
    Default: "¤stack-name¤-¤env¤"

Globals:
  Function:
    Runtime: python3.8
    CodeUri: ¤relative-path-src¤/
    Timeout: 180
    # KmsKeyArn : ¤cmk_id¤ # KMS utilisée par Lambda pour chiffrer et déchiffrer les variables d'environnement de votre fonction
    Layers:
      # - !Ref CovcovLibsLayer
      - Fn::ImportValue: covcov-layer-¤env¤-CovcovLibsLayer
    VpcConfig:
      SecurityGroupIds:
        - sg-¤sg-id¤
      SubnetIds:
        - subnet-¤subnet-id_1¤
        - subnet-¤subnet-id_2¤
#        - subnet-¤subnet-id_3¤
#    AssumeRolePolicyDocument:
#      Version: 2012-10-17
#      Statement:
#        - Effect: Allow
#          Principal:
#            Service: cognito-idp.amazonaws.com
#          Action: sts:AssumeRole


Resources:
  CovcovLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  # General settings
  CovcovCompanyCognito:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${UserPoolNameCompany}
      AliasAttributes :
        - email
      AutoVerifiedAttributes:
        - email
      # UsernameAttributes:
      # - email
      UsernameConfiguration:
        CaseSensitive : False
      MfaConfiguration : "OFF"
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: "verified_email"
            Priority: 1
      Schema:
        - Name: email
          Required: true
          Mutable: true
        - Name: etablissement
          AttributeDataType: String # https://stackoverflow.com/questions/46302488/how-to-set-required-attributes-in-aws-cognito-user-pool-using-aws-cloudformation
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MaxLength: 30
            MinLength: 1
        - Name: company_name
          AttributeDataType: String # https://stackoverflow.com/questions/46302488/how-to-set-required-attributes-in-aws-cognito-user-pool-using-aws-cloudformation
          Mutable: true
          Required: false
          StringAttributeConstraints:
            MaxLength: 50
            MinLength: 1
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireNumbers : True
          RequireSymbols : True
          RequireUppercase : True
          RequireLowercase : True
          TemporaryPasswordValidityDays : 7
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: False
      VerificationMessageTemplate:
        DefaultEmailOption: "CONFIRM_WITH_LINK"
        EmailSubjectByLink: "Votre lien de validation Covcov"
        EmailMessageByLink: "Veuillez cliquer sur le lien ci-dessous pour vérifier votre adresse e-mail. {##Vérifier l'adresse e-mail##}"
      LambdaConfig:
        PreSignUp: !GetAtt PreSignupFunction.Arn
        PostConfirmation: !GetAtt PostConfirmationFunction.Arn

  # App clients
  CovcovClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CovcovCompanyCognito
      ClientName: covcov-app
      GenerateSecret: false # set to false for web clients
      PreventUserExistenceErrors: "ENABLED"
      TokenValidityUnits:
        AccessToken: "minutes"
        IdToken: "minutes"
        RefreshToken: "days"
      RefreshTokenValidity: 1
      AccessTokenValidity: 50
      IdTokenValidity: 60

  # App Integration
  CovcovIntegration:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain : "¤prj-name¤-¤env¤"
      UserPoolId: !Ref CovcovCompanyCognito

  ######################
  # PreSignupFunction
  ######################
  PreSignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_presignup.handle
      AutoPublishAlias: live
#      Events:
#        CovcovCompanyCognitoEvt:
#          # https://forum.serverless.com/t/linking-lambda-function-to-an-exiting-user-pool/4688/3
#          Type:  Cognito
#          Properties:
#            UserPool: !Ref CovcovCompanyCognito
#            Trigger: PreSignUp

  # https://gist.github.com/danilop/75561c2660275fc328a68741f6d01066#file-template-yaml-L32
  PreSignupScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: ¤max_cap_lambda_generic¤
      MinCapacity: ¤min_cap_lambda_generic¤
      ResourceId: !Sub function:${PreSignupFunction}:live # You need to specify an alias or version here
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency
      ScalableDimension: lambda:function:ProvisionedConcurrency
      ServiceNamespace: lambda
    DependsOn: PreSignupFunctionAliaslive # This is your function logical ID + "Alias" + what you use for AutoPublishAlias

  PreSignupAutoScaling :
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyType: TargetTrackingScaling
      PolicyName: PreSignupAutoScalingPolicy
      ScalingTargetId: !Ref PreSignupScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 0.80
        ScaleInCooldown: 3    # 0: Default value for Lambdas
        ScaleOutCooldown: 2   # 0: Default value for Lambdas
        PredefinedMetricSpecification:
          PredefinedMetricType: LambdaProvisionedConcurrencyUtilization

  ############################
  # PostConfirmationFunction
  ############################
  PostConfirmationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_postsignup_confirmation.handle
      # AutoPublishAlias : ¤env¤-PostConfirmationFunction
      AutoPublishAlias: live
#      Name: BLUE
#      ProvisionedConcurrencyConfig:
#        ProvisionedConcurrentExecutions: 1
#      provisionedConcurrency: 5

#  PostConfirmationVersion:
#    Type: AWS::Lambda::Version
#    Properties:
#      FunctionName: !Ref PostConfirmationFunction

#  PostConfirmationAlias:
#    Type: AWS::Lambda::Alias
#    Properties:
#      FunctionName: !Ref PostConfirmationFunction
#      FunctionVersion: !GetAtt PostConfirmationVersion.Version
#      Name: PostConfirmation-¤env¤
#      ProvisionedConcurrencyConfig:
#        ProvisionedConcurrentExecutions: 20

  PostConfirmationScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: ¤max_cap_lambda_generic¤
      MinCapacity: ¤min_cap_lambda_generic¤
      ResourceId: !Sub function:${PostConfirmationFunction}:live # You need to specify an alias or version here
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency
      ScalableDimension: lambda:function:ProvisionedConcurrency
      ServiceNamespace: lambda
    DependsOn: PostConfirmationFunctionAliaslive # This is your function logical ID + "Alias" + what you use for AutoPublishAlias

  PostConfirmationAutoScaling :
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyType: TargetTrackingScaling
      PolicyName: PostConfirmationAutoScalingPolicy
      ScalingTargetId: !Ref PostConfirmationScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 0.80
        ScaleInCooldown: 3    # 0: Default value for Lambdas
        ScaleOutCooldown: 2   # 0: Default value for Lambdas
        PredefinedMetricSpecification:
          PredefinedMetricType: LambdaProvisionedConcurrencyUtilization



  CognitoPreSignupInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PreSignupFunction.Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn: !GetAtt CovcovCompanyCognito.Arn

  CognitoPostConfirmationInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PostConfirmationFunction.Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn: !GetAtt CovcovCompanyCognito.Arn

Outputs:
  UserPoolId:
    Description : "CovcovCompanyCognito - Pool Id"
    Value: !Ref CovcovCompanyCognito
    Export:
      Name: "¤stack-name¤-¤env¤-UserPool::Id"
  UserPoolArn:                                    # <-- Logical ID
    Description : "CovcovCompanyCognito - Pool Arn"
    Value: !GetAtt CovcovCompanyCognito.Arn       # <-- Value to return
    Export:
      Name: !Sub "${AWS::StackName}-UserPoolArn"  # <-- Value to export
  AppClientId:
    Description : "CovcovClient - Client Id"
    Value: !Ref CovcovClient
    Export:
      Name: "¤stack-name¤-¤env¤-UserPoolClient::Id"
