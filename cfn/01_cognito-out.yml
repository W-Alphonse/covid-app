AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Stack: covcov-cognito-DEV

  '
Parameters:
  UserPoolNameCompany:
    Type: String
    Default: covcov-cognito-DEV
Globals:
  Function:
    Runtime: python3.8
    CodeUri: ../src/
    Timeout: 180
    Layers:
    - Ref: CovcovLibsLayer
    VpcConfig:
      SecurityGroupIds:
      - sg-07e556a0646210968
      SubnetIds:
      - subnet-08c8be7b7bc3d5b17
      - subnet-02f8d18bfc7567152
      - subnet-04221ccadea52a084
Resources:
  CovcovLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
  CovcovLibsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: Dependencies base layer for python apps
      ContentUri: s3://covcov-dev/cognito/2c0d5223d8496c6b264b022f44183d2f
      LayerName: covcov-libs
      RetentionPolicy: Retain
      CompatibleRuntimes:
      - python3.8
    Metadata:
      BuildMethod: python3.8
  CovcovCompanyCognito:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName:
        Fn::Sub: ${UserPoolNameCompany}
      AliasAttributes:
      - email
      AutoVerifiedAttributes:
      - email
      UsernameConfiguration:
        CaseSensitive: false
      MfaConfiguration: 'OFF'
      AccountRecoverySetting:
        RecoveryMechanisms:
        - Name: verified_email
          Priority: 1
      Schema:
      - Name: email
        Required: true
        Mutable: true
      - Name: etablissement
        AttributeDataType: String
        Mutable: true
        Required: false
        StringAttributeConstraints:
          MaxLength: 30
          MinLength: 1
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          RequireLowercase: true
          TemporaryPasswordValidityDays: 7
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_LINK
        EmailSubjectByLink: Votre lien de validation Covcov
        EmailMessageByLink: "Veuillez cliquer sur le lien ci-dessous pour v\xE9rifier\
          \ votre adresse e-mail. {##V\xE9rifier l'adresse e-mail##}"
      LambdaConfig:
        PreSignUp:
          Fn::GetAtt:
          - PreSignupFunction
          - Arn
        PostConfirmation:
          Fn::GetAtt:
          - PostConfirmationFunction
          - Arn
  CovcovClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: CovcovCompanyCognito
      ClientName: covcov-app
      GenerateSecret: false
      PreventUserExistenceErrors: ENABLED
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days
      RefreshTokenValidity: 1
      AccessTokenValidity: 50
      IdTokenValidity: 60
  CovcovIntegration:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: covcov-app-dev
      UserPoolId:
        Ref: CovcovCompanyCognito
  PreSignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_presignup.handle
      CodeUri: s3://covcov-dev/cognito/33876ff9ae809123ed867e022b39c344
  PostConfirmationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_postsignup_confirmation.handle
      CodeUri: s3://covcov-dev/cognito/33876ff9ae809123ed867e022b39c344
  FakeFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_fake.handle
      CodeUri: s3://covcov-dev/cognito/7250e6882f9724bed256354789d08df0
Outputs:
  UserPoolId:
    Description: CovcovCompanyCognito - Pool Id
    Value:
      Ref: CovcovCompanyCognito
    Export:
      Name: UserPool::Id
  UserPoolArn:
    Description: CovcovCompanyCognito - Pool Arn
    Value:
      Fn::GetAtt:
      - CovcovCompanyCognito
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-UserPoolArn
  AppClientId:
    Description: CovcovClient - Client Id
    Value:
      Ref: CovcovClient
    Export:
      Name: UserPoolClient::Id
